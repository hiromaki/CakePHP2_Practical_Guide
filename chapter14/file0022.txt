require 'capcake'

set :application, **"example.com"** (注:アプリケーション名)

set :scm, **:git**
set :branch, "master"
set :repository,  **"gituser@git.example.com:repos/cakebook.git"**
	(注:リポジトリ)
set :app_base, **"/var/www"**

set :keep_releases, 5

set :user, **"deployuser"** (注:デプロイ先のアカウント名)
set :deploy_to, 
	"#{app_base}/**dev**.#{application}" (注:デプロイ先ディレクトリ)
set :logs_files, %w(debug.log error.log)

role :web, **"web01", "web02"** (注:デプロイ先ホスト名)

task :staging do 
    set :deploy_to, "#{app_base}/**staging**.#{application}/" 
    set(:branch) { Capistrano::CLI.ui.ask("Branch to stage: ") }
end 

task :production do 
    set :deploy_to, "#{app_base}/**www**.#{application}/" 
    set :branch, "production"
end 

namespace :deploy do
  task :setup, :except => { :no_release => true } do
	set :shared_children, %w(tmp)
    dirs = [deploy_to, releases_path, shared_path]
    dirs += shared_children.map { |d| File.join(shared_path, d) }
    tmp_dirs = tmp_children.map { |d| File.join(tmp_path, d) }
    tmp_dirs += cache_children.map { |d| File.join(cache_path, d) }
    run "#{try_sudo} mkdir -p #{(dirs + tmp_dirs).join(' ')} && 
      #{try_sudo} chmod -R 777 #{tmp_path}" if (!user.empty?)
    set :git_flag_quiet, "-q "
  end

  task :symlink, :except => { :no_release => true } do
    on_rollback do
      if previous_release
        run "rm -f #{current_path}; 
          ln -s #{previous_release} #{current_path}; true"
      else
        logger.important "no previous release to rollback to, 
          rollback of symlink skipped"
      end
    end
    run "rm -rf #{latest_release}/tmp" if 
      (!remote_file_exists?("#{latest_release}/tmp/empty"))
    run "ln -s #{shared_path}/tmp #{latest_release}/app/tmp";
    run "rm -f #{current_path} && 
      ln -s #{latest_release} #{current_path}"
  end
end

capcake
